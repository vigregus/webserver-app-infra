#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ArgoCD —Å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./setup-github-auth.sh YOUR_GITHUB_TOKEN

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    log_error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å GitHub —Ç–æ–∫–µ–Ω"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 YOUR_GITHUB_TOKEN"
    echo ""
    echo "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:"
    echo "1. GitHub ‚Üí Settings ‚Üí Developer settings ‚Üí Personal access tokens"
    echo "2. Generate new token (classic)"
    echo "3. –í—ã–±–µ—Ä–∏—Ç–µ scope: repo, read:org"
    exit 1
fi

GITHUB_TOKEN="$1"
REPO_URL="https://github.com/vigregus/webserver-app-infra.git"
SECRET_NAME="webserver-app-repo"
NAMESPACE="argocd"

log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ArgoCD —Å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
log_info "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
log_info "Secret: $SECRET_NAME"
log_info "Namespace: $NAMESPACE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è namespace
if ! kubectl get namespace "$NAMESPACE" >/dev/null 2>&1; then
    log_error "Namespace '$NAMESPACE' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ArgoCD —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ (–±–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è)
if [[ ! "$GITHUB_TOKEN" =~ ^ghp_[a-zA-Z0-9]{36}$ ]] && [[ ! "$GITHUB_TOKEN" =~ ^github_pat_[a-zA-Z0-9_]{82}$ ]]; then
    log_warn "–¢–æ–∫–µ–Ω –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É GitHub —Ç–æ–∫–µ–Ω–∞"
    log_warn "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, –Ω–æ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ Secret (–µ—Å–ª–∏ –µ—Å—Ç—å)
if kubectl get secret "$SECRET_NAME" -n "$NAMESPACE" >/dev/null 2>&1; then
    log_info "–£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ Secret..."
    kubectl delete secret "$SECRET_NAME" -n "$NAMESPACE"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Secret
log_info "–°–æ–∑–¥–∞–Ω–∏–µ Secret –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."

kubectl create secret generic "$SECRET_NAME" \
    --namespace="$NAMESPACE" \
    --from-literal=type=git \
    --from-literal=url="$REPO_URL" \
    --from-literal=username=vigregus \
    --from-literal=password="$GITHUB_TOKEN"

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏ –¥–ª—è ArgoCD
log_info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏ –¥–ª—è ArgoCD..."
kubectl label secret "$SECRET_NAME" \
    --namespace="$NAMESPACE" \
    argocd.argoproj.io/secret-type=repository \
    --overwrite

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Secret
if kubectl get secret "$SECRET_NAME" -n "$NAMESPACE" >/dev/null 2>&1; then
    log_info "‚úÖ Secret —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
else
    log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Secret"
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ kubectl
if kubectl get secret "$SECRET_NAME" -n "$NAMESPACE" -o jsonpath='{.metadata.labels.argocd\.argoproj\.io/secret-type}' | grep -q "repository"; then
    log_info "‚úÖ Secret –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ repository"
else
    log_warn "‚ö†Ô∏è  Secret –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–µ—Ç–∫–∏"
fi

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
echo ""
log_info "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
log_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ ArgoCD UI:"
echo "   kubectl port-forward svc/argocd-server -n argocd 8080:443"
echo "   –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ https://localhost:8080 ‚Üí Settings ‚Üí Repositories"
echo ""
echo "2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "   argocd app sync webserver-app-dev"
echo "   argocd app sync webserver-app-prod"
echo ""
echo "3. –ò–ª–∏ —á–µ—Ä–µ–∑ kubectl:"
echo "   kubectl get applications -n argocd"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ArgoCD CLI (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
if command -v argocd >/dev/null 2>&1; then
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ ArgoCD CLI..."
    if argocd repo list 2>/dev/null | grep -q "webserver-app-infra"; then
        log_info "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω –≤ ArgoCD CLI"
    else
        log_warn "‚ö†Ô∏è  –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ArgoCD CLI. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è."
    fi
else
    log_warn "ArgoCD CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "   brew install argocd  # macOS"
    echo "   curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64"
fi

log_info "–ì–æ—Ç–æ–≤–æ! üöÄ"
