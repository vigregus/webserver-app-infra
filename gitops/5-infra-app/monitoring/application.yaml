apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: ""     # зафиксируй версию (напр. "65.3.0")
    helm:
      releaseName: kube-prom-stack
      values: |
        grafana:
          adminPassword: admin
          service:
            type: ClusterIP
          additionalDataSources:
            - name: Loki
              type: loki
              access: proxy
              url: http://loki.logging.svc.cluster.local:3100
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ "CreateNamespace=true" ]
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: ""     # зафиксируй версию (напр. "6.x")
    helm:
      releaseName: loki
      values: |
        serviceMonitor:
          enabled: true
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ "CreateNamespace=true" ]
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluent-bit
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"   # подождать, пока поднимется Loki
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  source:
    repoURL: https://fluent.github.io/helm-charts
    chart: fluent-bit
    targetRevision: ""     # зафиксируй версию (напр. "0.47.x")
    helm:
      releaseName: fluent-bit
      values: |
        kind: DaemonSet
        serviceMonitor:
          enabled: true
        config:
          service: |
            [SERVICE]
                Flush        1
                Daemon       Off
                Log_Level    info
          inputs: |
            [INPUT]
                Name              tail
                Path              /var/log/containers/*.log
                Parser            cri
                Tag               kube.*
                Mem_Buf_Limit     50MB
                Skip_Long_Lines   On
          filters: |
            [FILTER]
                Name                kubernetes
                Match               kube.*
                Kube_Tag_Prefix     kube.var.log.containers.
                Merge_Log           On
                Keep_Log            Off
          outputs: |
            [OUTPUT]
                Name              loki
                Match             *
                Url               http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
                Labels            job=fluent-bit, namespace=$kubernetes['namespace_name'], pod=$kubernetes['pod_name'], container=$kubernetes['container_name']
                Line_Format       json
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ "CreateNamespace=true" ]
