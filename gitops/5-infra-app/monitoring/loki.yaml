apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: "6.41.1"
    helm:
      releaseName: loki
      values: |
        deploymentMode: SingleBinary

        singleBinary:
          replicas: 1

          # куда Loki пишет (мы смонтируем сюда emptyDir)
          extraVolumes:
            - name: loki-data
              emptyDir: {}

          extraVolumeMounts:
            - name: loki-data
              mountPath: /var/loki

          # init-контейнер под root подготовит каталог и права
          extraInitContainers:
            - name: init-perms
              image: busybox:1.36
              command: ["/bin/sh","-c"]
              args:
                - |
                  set -eux
                  mkdir -p /var/loki/chunks /var/loki/index
                  chown -R 10001:10001 /var/loki
              securityContext:
                runAsUser: 0
                runAsGroup: 0
              volumeMounts:
                - name: loki-data
                  mountPath: /var/loki

          # основной контейнер под непривилегированным пользователем
          containerSecurityContext:
            runAsUser: 10001
            runAsGroup: 10001
            runAsNonRoot: true
            allowPrivilegeEscalation: false

          podSecurityContext:
            fsGroup: 10001
            fsGroupChangePolicy: OnRootMismatch

          resources:
            requests: { cpu: 50m,  memory: 128Mi }
            limits:   { cpu: 200m, memory: 256Mi }

        # никаких PVC
        persistence:
          enabled: false

        # метрики для прома (если нужен ServiceMonitor)
        monitoring:
          serviceMonitor:
            enabled: true

        # конфиг Loki (минимальный, файловое хранилище)
        loki:
          # чтобы шаблоны чарта не требовали объектное хранилище
          storage:
            use_thanos_objstore: false
            bucketNames: { chunks: chunks, ruler: ruler, admin: admin }

          # отключаем memberlist авто-джойн (иначе будет пытаться резолвить loki-memberlist)
          memberlistConfig:
            join_members: []

          # реальный runtime-конфиг (структурированный)
          structuredConfig:
            auth_enabled: false
            server:
              http_listen_port: 3100

            # ring в памяти (моно-бинарный режим)
            ingester:
              chunk_idle_period: 5m
              chunk_retain_period: 30s
              lifecycler:
                address: 127.0.0.1
                ring:
                  kvstore: { store: inmemory }
                  replication_factor: 1
                final_sleep: 0s

            # схема на файловой системе (tsdb + filesystem)
            schema_config:
              configs:
                - from: "2024-01-01"
                  store: tsdb
                  object_store: filesystem
                  schema: v13
                  index:
                    prefix: loki_index_
                    period: 24h

            storage_config:
              filesystem:
                directory: /var/loki/chunks

            # (опционально) индекс рядом — Loki с TSDB сам управляет каталогом
            # boltdb_shipper/boltdb НЕ НУЖЕН в TSDB

        # гарантированно выключаем все остальные роли
        read:          { replicas: 0 }
        write:         { replicas: 0 }
        backend:       { replicas: 0 }
        gateway:       { replicas: 0 }
        distributor:   { enabled: false }
        ingester:      { enabled: false }
        querier:       { enabled: false }
        queryFrontend: { enabled: false }
        compactor:     { enabled: false }
        ruler:         { enabled: false }
        indexGateway:  { enabled: false }
        tableManager:  { enabled: false }


  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
