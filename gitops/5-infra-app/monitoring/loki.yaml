apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: "6.41.1"
    helm:
      releaseName: loki
      values: |
       deploymentMode: SingleBinary

        singleBinary:
          replicas: 1

          # Дадим процессу права на том через fsGroup
          podSecurityContext:
            fsGroup: 10001
            fsGroupChangePolicy: OnRootMismatch

          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            runAsNonRoot: true

          # Том во временную память узла
          extraVolumes:
            - name: loki-data
              emptyDir: {}
          extraVolumeMounts:
            - name: loki-data
              mountPath: /var/loki

          # (опционально) init-контейнер, если fsGroup не сработал в вашей среде
          extraInitContainers:
            - name: fix-perms
              image: busybox:1.36
              command: ["sh","-c","mkdir -p /var/loki/chunks /var/loki/index && chown -R 10001:10001 /var/loki"]
              securityContext:
                runAsUser: 0
              volumeMounts:
                - name: loki-data
                  mountPath: /var/loki

        # Отключаем PVC
        persistence:
          enabled: false

        monitoring:
          serviceMonitor:
            enabled: true

        # Важно: отключить memberlist автодискавери, чтобы не было ошибки loki-memberlist
        loki:
          memberlistConfig:
            join_members: []

          # Хелм-шаблонам нужно это поле, но мы не используем объектное хранилище
          storage:
            use_thanos_objstore: false
            bucketNames: { chunks: chunks, ruler: ruler, admin: admin }

          # РЕАЛЬНЫЙ runtime-конфиг Loki (filesystem + boltdb)
          structuredConfig:
            auth_enabled: false
            server:
              http_listen_port: 3100
            memberlist:
              join_members: []       # на всякий случай и тут «пусто»

            ingester:
              chunk_idle_period: 5m
              chunk_retain_period: 30s
              lifecycler:
                address: 127.0.0.1
                ring:
                  kvstore: { store: inmemory }
                  replication_factor: 1
                final_sleep: 0s

            # Локальное хранение на томе, который мы смонтировали в /var/loki
            storage_config:
              filesystem:
                directory: /var/loki/chunks
              boltdb:
                directory: /var/loki/index

        # Гарантируем, что включён ровно SingleBinary
        read:          { replicas: 0 }
        write:         { replicas: 0 }
        backend:       { replicas: 0 }
        gateway:       { replicas: 0 }
        distributor:   { enabled: false }
        ingester:      { enabled: false }
        querier:       { enabled: false }
        queryFrontend: { enabled: false }
        compactor:     { enabled: false }
        ruler:         { enabled: false
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
