apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: "6.41.1"
    helm:
      releaseName: loki
      values: |
        deploymentMode: SingleBinary
        singleBinary:
          replicas: 1
          resources:
            requests: { cpu: 50m,  memory: 128Mi }
            limits:   { cpu: 200m, memory: 256Mi }

        monitoring:
          serviceMonitor:
            enabled: true

        loki:
          # оставляем тестовую схему -> store: boltdb
          useTestSchema: true

          # это нужно шаблонам чарта, не влияет на runtime при FS
          storage:
            use_thanos_objstore: false
            bucketNames:
              chunks: chunks
              ruler:  ruler
              admin:  admin

          # РЕАЛЬНЫЙ конфиг Loki как map (без max_transfer_retries и без boltdb_shipper)
          structuredConfig:
            auth_enabled: false
            server:
              http_listen_port: 3100

            # простое кольцо в single-binary
            ingester:
              chunk_idle_period: 5m
              chunk_retain_period: 30s
              lifecycler:
                address: 127.0.0.1
                ring:
                  kvstore:
                    store: inmemory
                  replication_factor: 1
                final_sleep: 0s

            # test-schema -> boltdb (без shared_store)
            storage_config:
              filesystem:
                directory: /var/loki/chunks
              boltdb:
                directory: /var/loki/index
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ "CreateNamespace=true" ]
