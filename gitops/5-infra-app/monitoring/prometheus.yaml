apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    # --- NEW ANNOTATION TO IGNORE VMRule ---
    resource-filter.argocd.argoproj.io/exclude-resource-kind: VMRule
    # ----------------------------------------------------
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "77.11.1"
    helm:
      releaseName: kube-prom-stack
      values: |
        # --- DISABLE UNNECESSARY DASHBOARDS AND RULES ---

        # Disable import of all standard dashboards except basic ones
        grafana:
          adminPassword: admin
          service:
            type: ClusterIP
          additionalDataSources:
            - name: Loki
              type: loki
              access: proxy
              url: http://loki.logging.svc.cluster.local:3100
          # Set minimal set of built-in dashboards
          defaultDashboardsTimezone: UTC

        # Disable standard alerting rules (PrometheusRules)
        prometheus-node-exporter:
          enabled: true

        # Disable ServiceMonitors and rules for API Server, Kubelet, Scheduler etc.
        # This significantly reduces the number of metrics and dashboards.
        kubeApiServer:
          enabled: false
        kubelet:
          enabled: true
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false
        coreDNS:
          enabled: false
        kube-state-metrics:
          # Keep enabled as it provides important metrics about pod status
          enabled: true
          resources:
            requests: { cpu: 50m, memory: 100Mi }
            limits:   { cpu: 200m, memory: 200Mi }

        prometheus:
          prometheusSpec:
            # Disable all alerting rules that are generated by the chart
            ruleSelectorNilUsesHelmValues: false
            # Disable all ServiceMonitors except those you create manually
            serviceMonitorSelectorNilUsesHelmValues: false

            resources:
              requests: { cpu: 100m, memory: 256Mi }
              limits:   { cpu: 500m, memory: 512Mi }
            # ServiceMonitors of your application will be discovered manually (by labels)

        nodeExporter:
          # Keep NodeExporter to collect metrics from the node itself
          enabled: true
          # --- FIXES FOR SCHEDULING ---
          tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "node-role.kubernetes.io/master"
              operator: "Exists"
              effect: "NoSchedule"
          hostPort: 0
          nodeSelector: {}
          resources:
            requests: { cpu: 20m, memory: 50Mi }
            limits:   { cpu: 100m, memory: 100Mi }

  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ "CreateNamespace=true", "ServerSideApply=true" ]
